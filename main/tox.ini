[tox]
project = Vagrant
minversion = 3.2.1
skipsdist = true
envlist = py{2,3},lint,vagrantlint
skip_missing_interpreters = true


[testenv]
setenv =
    LANG = en_US.UTF-8
    VIRTUAL_ENV = {envdir}
    PYTHONDONTWRITEBYTECODE = 1
    PYTHONWARNINGS = ignore
    VIRTUALENV_NO_DOWNLOAD = 1
    PIP_CONFIG_FILE = .pip.conf
    NO_PROXY = .nsn-net.net
passenv =
    HTTP_PROXY
    HTTPS_PROXY
    USERPROFILE
sitepackages = False
whitelist_externals =
    find
deps =
    py2: tornado==5.1.1
    jinja2==2.8.1
    pre-commit>=1.12.0
    mkdocs>=1.0.4
commands =
    - find . -type f -name "*.pyc" -delete
    - find . -type d -name "__pycache__" -delete
    {envpython} -m pip check


[testenv:lint]
description = Execute project linters
basepython = python3
deps =
    pre-commit>=1.12.0
commands =
    {envpython} -m pre_commit run --all


[testenv:vagrantlint]
description = Validate/Lint Vagrant file
basepython = python3
deps =
    pre-commit>=1.12.0
commands =
    {envpython} -m pre_commit run --hook-stage manual vagrantlint


[testenv:docs]
description = Project documentation
basepython = python3
deps =
    mkdocs>= 1.0.4
commands =
    {envpython} -m mkdocs serve


[testenv:travis]
description = Jenkins CI/CD
recreate = true
basepython = python3
commands =
    {envpython} -m pre_commit run --all
    {envpython} -m mkdocs build --strict


[testenv:venv]
description = Any local command in virtualenv
commands = {posargs}
