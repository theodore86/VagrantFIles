# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
 
  config.vm.box = "ubuntu/trusty64"
  config.vm.hostname = "theogeo"
  config.vm.define  "devpy"
  config.vm.box_check_update = false

  config.vm.synced_folder "../../../../../Libraries", "/scripts",
    owner: "vagrant",
    group: "vagrant",
    mount_options: ["dmode=554,fmode=554"]

  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.name = "pydev_env"
    vb.cpus = 2
    vb.memory = "1024"
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
  end
 
  #Dev environment setup
  $env = <<-SCRIPT
    cp -f /vagrant/scripts/{aliases.sh,env.sh} /etc/profile.d/
  SCRIPT
  config.vm.provision "env", type: "shell", run: "always", inline: $env

  #User configuration files
  config.vm.provision "vimrc", type: "file", source: "~/.vimrc", destination: "~/"

  #Ubuntu package installation
  $shcmds = <<-SCRIPT
    apt-get update
    apt-get upgrade -y python
    apt-get install -y python-pip
  SCRIPT
  config.vm.provision "apt", type: "shell", run: "always", inline: $shcmds

  #Python dev env
  $pycmds = <<-SCRIPT
    pip install --upgrade --user pip
    pip install --user tox
  SCRIPT
  config.vm.provision "python", type: "shell", run: "always", privileged: false, inline: $pycmds

  #Tshark compilation -- using shared folder
  config.vm.provision "tshark", type: "shell", run: "never" do |s|
    s.inline = "/bin/bash /scripts/Shell/wireshark/compile_tshark.sh $1"
    s.privileged = true
    s.args = ["-c /scripts/Shell/wireshark/wireshark-master-ba-2.4-tar.gz -t -o /opt"]
  end

end
